{
    "Comment": "video analysis state machine. Fan out to numbers of child state machines to handle frame based, custom model, and video based analysis",
    "StartAt": "Start video analysis",
    "States": {
        "Start video analysis": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "Video based detection iterators",
                    "States": {
                        "Video based detection iterators": {
                            "Type": "Task",
                            "Resource": "${AnalysisVideoLambda.Arn}",
                            "Parameters": {
                                "operation": "prepare-video-detection-iterators",
                                "uuid.$": "$.uuid",
                                "input.$": "$.input",
                                "data.$": "$.data",
                                "status": "NOT_STARTED",
                                "progress": 0
                            },
                            "Next": "Video based analysis",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 2,
                                    "BackoffRate": 1.1
                                }
                            ]
                        },
                        "Video based analysis": {
                            "Type": "Map",
                            "MaxConcurrency": 10,
                            "ItemsPath": "$.data.iterators",
                            "ItemProcessor": {
                                "ProcessorConfig": {
                                    "Mode": "INLINE"
                                },
                                "StartAt": "Run video based detection",
                                "States": {
                                    "Run video based detection": {
                                        "Type": "Task",
                                        "Resource": "arn:aws:states:::states:startExecution.sync:2",
                                        "Parameters": {
                                            "StateMachineArn": "${VideoBasedDetectionStateMachine.Arn}",
                                            "Input": {
                                                "operation": "start-detection-iterator",
                                                "uuid.$": "$.uuid",
                                                "status": "NOT_STARTED",
                                                "progress": 0,
                                                "data.$": "$.data"
                                            }
                                        },
                                        "OutputPath": "$.Output",
                                        "End": true
                                    }
                                }
                            },
                            "ResultPath": "$.data.iterators",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Run dynamic frame segmentation",
                    "States": {
                        "Run dynamic frame segmentation": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::states:startExecution.sync:2",
                            "Parameters": {
                                "StateMachineArn": "${DynamicFrameSegmentationStateMachine.Arn}",
                                "Input": {
                                    "operation": "prepare-segment-detection",
                                    "uuid.$": "$.uuid",
                                    "input.$": "$.input",
                                    "data.$": "$.data",
                                    "status": "NOT_STARTED",
                                    "progress": 0
                                }
                            },
                            "OutputPath": "$.Output",
                            "Next": "Start frame-based analysis"
                        },
                        "Start frame-based analysis": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "Frame based detection iterators",
                                    "States": {
                                        "Frame based detection iterators": {
                                            "Type": "Task",
                                            "Resource": "${AnalysisVideoLambda.Arn}",
                                            "Parameters": {
                                                "operation": "prepare-frame-detection-iterators",
                                                "uuid.$": "$.uuid",
                                                "input.$": "$.input",
                                                "data.$": "$.data",
                                                "status": "NOT_STARTED",
                                                "progress": 0
                                            },
                                            "Next": "Frame based analysis",
                                            "Retry": [
                                                {
                                                    "ErrorEquals": [
                                                        "States.ALL"
                                                    ],
                                                    "IntervalSeconds": 1,
                                                    "MaxAttempts": 2,
                                                    "BackoffRate": 1.1
                                                }
                                            ]
                                        },
                                        "Frame based analysis": {
                                            "Type": "Map",
                                            "MaxConcurrency": 10,
                                            "ItemsPath": "$.data.iterators",
                                            "ItemProcessor": {
                                                "ProcessorConfig": {
                                                    "Mode": "INLINE"
                                                },
                                                "StartAt": "Run frame based detection",
                                                "States": {
                                                    "Run frame based detection": {
                                                        "Type": "Task",
                                                        "Resource": "arn:aws:states:::states:startExecution.sync:2",
                                                        "Parameters": {
                                                            "StateMachineArn": "${FrameBasedDetectionStateMachine.Arn}",
                                                            "Input": {
                                                                "operation": "detect-frame-iterator",
                                                                "uuid.$": "$.uuid",
                                                                "status": "NOT_STARTED",
                                                                "progress": 0,
                                                                "data.$": "$.data"
                                                            }
                                                        },
                                                        "OutputPath": "$.Output",
                                                        "End": true
                                                    }
                                                }
                                            },
                                            "ResultPath": "$.data.iterators",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "Custom model detection iterators",
                                    "States": {
                                        "Custom model detection iterators": {
                                            "Type": "Task",
                                            "Resource": "${AnalysisVideoLambda.Arn}",
                                            "Parameters": {
                                                "operation": "prepare-custom-detection-iterators",
                                                "uuid.$": "$.uuid",
                                                "input.$": "$.input",
                                                "data.$": "$.data",
                                                "status": "NOT_STARTED",
                                                "progress": 0
                                            },
                                            "Next": "Custom model analysis",
                                            "Retry": [
                                                {
                                                    "ErrorEquals": [
                                                        "States.ALL"
                                                    ],
                                                    "IntervalSeconds": 1,
                                                    "MaxAttempts": 2,
                                                    "BackoffRate": 1.1
                                                }
                                            ]
                                        },
                                        "Custom model analysis": {
                                            "Type": "Map",
                                            "MaxConcurrency": 10,
                                            "ItemsPath": "$.data.iterators",
                                            "ItemProcessor": {
                                                "ProcessorConfig": {
                                                    "Mode": "INLINE"
                                                },
                                                "StartAt": "Run custom model detection",
                                                "States": {
                                                    "Run custom model detection": {
                                                        "Type": "Task",
                                                        "Resource": "arn:aws:states:::states:startExecution.sync:2",
                                                        "Parameters": {
                                                            "StateMachineArn": "${CustomModelDetectionStateMachine.Arn}",
                                                            "Input": {
                                                                "operation": "start-detection-iterator",
                                                                "uuid.$": "$.uuid",
                                                                "status": "NOT_STARTED",
                                                                "progress": 0,
                                                                "input.$": "$.input",
                                                                "data.$": "$.data"
                                                            }
                                                        },
                                                        "OutputPath": "$.Output",
                                                        "End": true
                                                    }
                                                }
                                            },
                                            "ResultPath": "$.data.iterators",
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "End": true
                        }
                    }
                }
            ],
            "Next": "Video analysis completed"
        },
        "Video analysis completed": {
            "Type": "Task",
            "Resource": "${AnalysisVideoLambda.Arn}",
            "Parameters": {
                "operation": "job-completed",
                "stateExecution.$": "$$.Execution",
                "parallelStateOutputs.$": "$"
            },
            "End": true,
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 2,
                    "BackoffRate": 1.1
                }
            ]
        }
    }
}
