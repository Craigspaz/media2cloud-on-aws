{
    "StartAt": "Start transcribe and wait",
    "States": {
        "Start transcribe and wait": {
            "Type": "Task",
            "Resource":"arn:aws:states:::lambda:invoke.waitForTaskToken",
            "Parameters": {
                "FunctionName": "${AnalysisAudioLambda}",
                "Payload": {
                    "token.$":"$$.Task.Token",
                    "operation": "start-transcribe",
                    "uuid.$": "$.uuid",
                    "status": "NOT_STARTED",
                    "progress": 0,
                    "input.$": "$.input"
                }
            },
            "TimeoutSeconds": 86400,
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 1,
                    "BackoffRate": 1.2
                }
            ],
            "Next": "Collect transcribe results"
        },
        "Collect transcribe results": {
            "Type": "Task",
            "Resource": "${AnalysisAudioLambda.Arn}",
            "Parameters": {
                "operation": "collect-transcribe-results",
                "uuid.$": "$.uuid",
                "status": "NOT_STARTED",
                "progress": 0,
                "input.$": "$.input",
                "data.$": "$.data"
            },
            "Next": "Got transcription data?",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 4,
                    "BackoffRate": 1.1
                }
            ]
        },
        "Got transcription data?": {
            "Type": "Choice",
            "Choices": [
                {
                    "And": [
                        {
                            "Variable": "$.data.transcribe",
                            "IsPresent": true
                        },
                        {
                            "Variable": "$.data.transcribe.languageCode",
                            "IsPresent": true
                        },
                        {
                            "Variable": "$.data.transcribe.output",
                            "IsPresent": true
                        },
                        {
                            "Variable": "$.data.transcribe.vtt",
                            "IsPresent": true
                        }
                    ],
                    "Next": "Index transcribe results"
                }
            ],
            "Default": "Analysis completed"
        },
        "Index transcribe results": {
            "Type": "Task",
            "Resource": "${AnalysisAudioLambda.Arn}",
            "Parameters": {
                "operation": "index-transcribe-results",
                "uuid.$": "$.uuid",
                "status": "NOT_STARTED",
                "progress": 0,
                "input.$": "$.input",
                "data.$": "$.data"
            },
            "Next": "Start comprehend analysis",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 4,
                    "BackoffRate": 1.1
                }
            ]
        },
        "Start comprehend analysis": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "Batch detect entities",
                    "States": {
                        "Batch detect entities": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress.$": "$.progress",
                                "operation": "start-entity",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "Next": "Index entity results",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 8,
                                    "BackoffRate": 1.2
                                }
                            ]
                        },
                        "Index entity results": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "index-entity-results",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "End": true,
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ]
                        }
                    }
                },
                {
                    "StartAt": "Batch detect keyphrases",
                    "States": {
                        "Batch detect keyphrases": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress.$": "$.progress",
                                "operation": "start-keyphrase",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "Next": "Index keyphrase results",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 8,
                                    "BackoffRate": 1.2
                                }
                            ]
                        },
                        "Index keyphrase results": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "index-keyphrase-results",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "End": true,
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ]
                        }
                    }
                },
                {
                    "StartAt": "Batch detect sentiments",
                    "States": {
                        "Batch detect sentiments": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress.$": "$.progress",
                                "operation": "start-sentiment",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "Next": "Index sentiment results",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 8,
                                    "BackoffRate": 1.2
                                }
                            ]
                        },
                        "Index sentiment results": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "index-sentiment-results",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "End": true,
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ]
                        }
                    }
                },
                {
                    "StartAt": "Check custom entity criteria",
                    "States": {
                        "Check custom entity criteria": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress.$": "$.progress",
                                "operation": "check-custom-entity-criteria",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "Next": "Can start custom entity?",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 1,
                                    "BackoffRate": 1.2
                                }
                            ]
                        },
                        "Can start custom entity?" : {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "And": [
                                        {
                                            "Variable": "$.data.comprehend",
                                            "IsPresent": true
                                        },
                                        {
                                            "Variable": "$.data.comprehend.customentity",
                                            "IsPresent": true
                                        },
                                        {
                                            "Variable": "$.data.comprehend.customentity.prefix",
                                            "IsPresent": true
                                        }
                                    ],
                                    "Next": "Start and wait custom entity"
                                }
                            ],
                            "Default": "Custom entity skipped"
                        },
                        "Start and wait custom entity": {
                            "Type": "Task",
                            "Resource":"arn:aws:states:::lambda:invoke.waitForTaskToken",
                            "Parameters": {
                                "FunctionName": "${AnalysisAudioLambda}",
                                "Payload": {
                                    "token.$":"$$.Task.Token",
                                    "uuid.$": "$.uuid",
                                    "status": "NOT_STARTED",
                                    "progress.$": "$.progress",
                                    "operation": "start-custom-entity",
                                    "input.$": "$.input",
                                    "data.$": "$.data"
                                }
                            },
                            "TimeoutSeconds": 86400,
                            "Next": "Wait for custom entity status (3mins)",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ]
                        },
                        "Wait for custom entity status (3mins)": {
                            "Type": "Wait",
                            "Seconds": 180,
                            "Next": "Check custom entity status"
                        },
                        "Check custom entity status": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "check-custom-entity-status",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "Next": "Custom entity completed?",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 1,
                                    "BackoffRate": 1.1
                                }
                            ]
                        },
                        "Custom entity completed?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Or": [
                                        {
                                            "Variable": "$.status",
                                            "StringEquals": "NO_DATA"
                                        },
                                        {
                                            "Variable": "$.status",
                                            "StringEquals": "ERROR"
                                        }
                                    ],
                                    "Next": "Custom entity skipped"
                                },
                                {
                                    "Variable": "$.status",
                                    "StringEquals": "COMPLETED",
                                    "Next": "Create custom entity track"
                                }
                            ],
                            "Default": "Wait for custom entity status (3mins)"
                        },
                        "Create custom entity track": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "create-custom-entity-track",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "Next": "Index custom entity results",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 2,
                                    "BackoffRate": 1.1
                                }
                            ]
                        },
                        "Index custom entity results": {
                            "Type": "Task",
                            "Resource": "${AnalysisAudioLambda.Arn}",
                            "Parameters": {
                                "uuid.$": "$.uuid",
                                "status": "NOT_STARTED",
                                "progress": 0,
                                "operation": "index-custom-entity-results",
                                "input.$": "$.input",
                                "data.$": "$.data"
                            },
                            "End": true,
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 1.1
                                }
                            ]
                        },
                        "Custom entity skipped": {
                            "Type": "Succeed"
                        }
                    }
                }
            ],
            "Next": "Analysis completed"
        },
        "Analysis completed": {
            "Type": "Task",
            "Resource": "${AnalysisAudioLambda.Arn}",
            "Parameters": {
                "operation": "job-completed",
                "stateExecution.$": "$$.Execution",
                "parallelStateOutputs.$": "$"
            },
            "End": true,
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 4,
                    "BackoffRate": 1.1
                }
            ]
        }
    }
}
