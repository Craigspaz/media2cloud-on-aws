{
    "Comment": "Create Amazon SageMaker Ground Truth custom labeling job and index the results",
    "StartAt": "Create dataset",
    "States": {
        "Create dataset": {
            "Type": "Task",
            "Resource": "${x0}",
            "Parameters": {
                "input.$": "$",
                "operation": "create-dataset"
            },
            "Next": "No dataset?",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 2,
                    "BackoffRate": 1.2
                }
            ]
        },
        "No dataset?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.status",
                    "StringEquals": "NO_DATA",
                    "Next": "Labeling job succeeded"
                }
            ],
            "Default": "Create and wait for labeling job"
        },
        "Create and wait for labeling job": {
            "Type": "Task",
            "Resource":"arn:aws:states:::lambda:invoke.waitForTaskToken",
            "Parameters": {
                "FunctionName": "${a0}",
                "Payload": {
                    "token.$":"$$.Task.Token",
                    "operation": "create-labeling-job",
                    "uuid.$": "$.uuid",
                    "status": "NOT_STARTED",
                    "progress": 0,
                    "input.$": "$.input",
                    "data.$": "$.data"
                }
            },
            "TimeoutSeconds": 172800,
            "Next": "Check labeling job status",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 2,
                    "BackoffRate": 1.2
                }
            ]
        },
        "Check labeling job status": {
            "Type": "Task",
            "Resource": "${x0}",
            "Parameters": {
                "operation": "check-labeling-status",
                "uuid.$": "$.uuid",
                "status.$": "$.status",
                "progress.$": "$.progress",
                "input.$": "$.input",
                "data.$": "$.data"
            },
            "Next": "Labeling job completed?",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 2,
                    "BackoffRate": 1.2
                }
            ]
        },
        "Labeling job completed?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.status",
                    "StringEquals": "COMPLETED",
                    "Next": "Index results"
                }
            ],
            "Default": "Wait for labeling job"

        },
        "Wait for labeling job": {
            "Type": "Wait",
            "Seconds": 60,
            "Next": "Check labeling job status"
        },
        "Index results": {
            "Type": "Task",
            "Resource": "${x0}",
            "Parameters": {
                "operation": "index-results",
                "uuid.$": "$.uuid",
                "status": "NOT_STARTED",
                "progress": 0,
                "input.$": "$.input",
                "data.$": "$.data"
            },
            "Next": "Labeling job succeeded",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 2,
                    "BackoffRate": 1.2
                }
            ]
        },
        "Labeling job succeeded": {
            "Type": "Task",
            "Resource": "${x0}",
            "Parameters": {
                "operation": "job-completed",
                "uuid.$": "$.uuid",
                "status": "NOT_STARTED",
                "progress": 0,
                "input.$": "$.input",
                "data.$": "$.data"
            },
            "End": true
        }
    }
}