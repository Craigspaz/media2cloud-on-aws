AWSTemplateFormatVersion: "2010-09-09"

Description: (SO0050-bucket) Media2Cloud - create and configure ingest, proxy, and web buckets

#
# Mappings to store fixed value of the solution
#
Mappings:
    S3:
        Notification:
            Prefix: ""
            Suffixes: ".json,.mp4,.mov,.wmv,.mxf,.ts,.mpg,.mpeg"
        Lifecycle:
            TageName: "IngestCompleted"
            TagValue: "true"
            StorageClass: "GLACIER"
        Website:
            MainPage: "index.html"

Parameters:
    SolutionId:
        Type: String
        Description: "part of the resource naming"
    RootStackName:
        Type: String
        Description: "part of the resource naming"
    SolutionUuid:
        Type: String
        Description: unique solution uuid
    AnonymousUsage:
        Type: String
        Description: send ananymous usage data
        Default: "No"
        AllowedValues:
          - "No"
          - "Yes"
    S3Bucket:
        Type: String
        Description: solution bucket
        AllowedPattern: "[a-z][a-z0-9-_]*"
    KeyPrefix:
        Type: String
        Description: solution key prefix
    CustomResourceArn:
        Type: String
        Description: for post-processing
    BucketPrefix:
        Type: String
        Description: "bucket prefix"
        AllowedPattern: "[a-z][a-z0-9-_]*"
    SNSTopicArn:
        Type: String
        Description: topic arn
    IotHost:
        Type: String
        Description: Iot host
    IotTopic:
        Type: String
        Description: Iot topic
    AwsSdkLayer:
        Type: String
        Description: AWS SDK layer
    CoreLibLayer:
        Type: String
        Description: Core Library layer
    UserDefinedIngestBucket:
        Type: String
        Description: User-defined Ingest Bucket
    UserDefinedProxyBucket:
        Type: String
        Description: User-defined Proxy Bucket

Metadata:
  cfn-lint:
    config:
        ignore_checks:
            # ignore CustomResourceArn not used
            - W2001
    AWS::CloudFormation::Interface:
        ParameterGroups:
            -
                Label:
                    default: "Solution Configuration"
                Parameters:
                    - SolutionId
                    - RootStackName
                    - SolutionUuid
                    - AnonymousUsage
                    - S3Bucket
                    - KeyPrefix
            -
                Label:
                    default: "S3 Configuration"
                Parameters:
                    - BucketPrefix
                    - UserDefinedIngestBucket
                    - UserDefinedProxyBucket
            -
                Label:
                    default: "Other resources"
                Parameters:
                    - CustomResourceArn
                    - IotTopic
                    - SNSTopicArn
                    - IotHost
                    - IotTopic
                    - AwsSdkLayer
                    - CoreLibLayer
        ParameterLabels:
            BucketPrefix:
                default: "Bucket Prefix"
            CustomResourceArn:
                default: "Custom Resource Arn"
            SolutionId:
                default: "Solution Id"
            RootStackName:
                default: "Top Stack Name"
            SolutionUuid:
                default: "UUID"
            AnonymousUsage:
                default: "Anonymous usage"
            S3Bucket:
                default: "Solution Bucket"
            KeyPrefix:
                default: "Solution KeyPrefix"
            SNSTopicArn:
                default: "SNS Topic"
            IotHost:
                default: "IoT Host"
            IotTopic:
                default: "IoT Topic"
            AwsSdkLayer:
                default: "AWS SDK Layer"
            CoreLibLayer:
                default: "Core Library Layer"
            UserDefinedIngestBucket:
                default: "User-defined Ingest Bucket"
            UserDefinedProxyBucket:
                default: "User-defined Proxy Bucket"

Conditions:
    CreateIngestBucket: !Equals [
        !Ref UserDefinedIngestBucket,
        ""
    ]
    CreateProxyBucket: !Equals [
        !Ref UserDefinedProxyBucket,
        ""
    ]
    UseAccelerateEndpoint: !And [
        !Condition CreateProxyBucket,
        !Condition CreateIngestBucket
    ]

Resources:
    LogsBucket:
        Type: AWS::S3::Bucket
        Metadata:
            cfn_nag:
                rules_to_suppress:
                    -
                        id: W35
                        reason: "Disable loggings on Logs bucket"
        DeletionPolicy: Retain
        UpdateReplacePolicy: Retain
        Properties:
            BucketName: !Sub "${BucketPrefix}-logs"
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                    -
                      ServerSideEncryptionByDefault:
                          SSEAlgorithm: AES256
            AccessControl: LogDeliveryWrite
            LifecycleConfiguration:
                Rules:
                    -
                        Id: "Keep access logs for 30 days"
                        Status: Enabled
                        Prefix: /
                        ExpirationInDays: 30
                        AbortIncompleteMultipartUpload:
                            DaysAfterInitiation: 1
            Tags:
                -
                    Key: SolutionId
                    Value: !Ref SolutionId
            VersioningConfiguration:
                Status: Enabled

    LogsBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref LogsBucket
            PolicyDocument:
                Statement:
                    -
                        Effect: Deny
                        Principal: "*"
                        Action: "*"
                        Resource: !Sub "arn:aws:s3:::${LogsBucket}/*"
                        Condition:
                            Bool:
                                "aws:SecureTransport": false

    #
    # assets automatically transition to Glacier after X days
    #
    IngestBucket:
        Condition: CreateIngestBucket
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        UpdateReplacePolicy: Retain
        Properties:
            BucketName: !Sub "${BucketPrefix}-ingest"
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                    -
                      ServerSideEncryptionByDefault:
                          SSEAlgorithm: AES256
            AccelerateConfiguration:
                AccelerationStatus: Enabled
            AccessControl: LogDeliveryWrite
            LoggingConfiguration:
                DestinationBucketName: !Ref LogsBucket
                LogFilePrefix: "access_logs_ingest_bucket/"
            CorsConfiguration:
                CorsRules:
                    -
                        AllowedMethods:
                            - "GET"
                            - "PUT"
                            - "POST"
                            - "HEAD"
                        AllowedOrigins:
                            - "*"
                        AllowedHeaders:
                            - "*"
                        ExposedHeaders:
                            - "ETag"
                            - "Content-Length"
                            - "x-amz-meta-uuid"
                            - "x-amz-meta-md5"
                        MaxAge: 3000
            LifecycleConfiguration:
                Rules:
                    -
                        Id: "Move to glacier after ingest completes"
                        Status: Enabled
                        TagFilters:
                            -
                                Key: !FindInMap [
                                    "S3",
                                    "Lifecycle",
                                    "TageName"
                                ]
                                Value: !FindInMap [
                                    "S3",
                                    "Lifecycle",
                                    "TagValue"
                                ]
                        Transitions:
                            -
                                StorageClass: !FindInMap [
                                    "S3",
                                    "Lifecycle",
                                    "StorageClass"
                                ]
                                TransitionInDays: 0
                        NoncurrentVersionTransitions:
                            -
                                StorageClass: !FindInMap [
                                    "S3",
                                    "Lifecycle",
                                    "StorageClass"
                                ]
                                TransitionInDays: 0
                    -
                        Id: "Keep previous version for 7 days"
                        Status: Enabled
                        NoncurrentVersionExpirationInDays: 7
                        AbortIncompleteMultipartUpload:
                            DaysAfterInitiation: 1
            Tags:
                -
                    Key: SolutionId
                    Value: !Ref SolutionId
            VersioningConfiguration:
                Status: Enabled

    IngestBucketPolicy:
        Condition: CreateIngestBucket
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref IngestBucket
            PolicyDocument:
                Statement:
                    -
                        Effect: Deny
                        Principal: "*"
                        Action: "*"
                        Resource: !Sub "arn:aws:s3:::${IngestBucket}/*"
                        Condition:
                            Bool:
                                "aws:SecureTransport": false

    #
    # proxy bucket to store proxies and media analysis results
    #
    ProxyBucket:
        Condition: CreateProxyBucket
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        UpdateReplacePolicy: Retain
        Properties:
            BucketName: !Sub "${BucketPrefix}-proxy"
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                    -
                      ServerSideEncryptionByDefault:
                          SSEAlgorithm: AES256
            AccelerateConfiguration:
                AccelerationStatus: Enabled
            AccessControl: LogDeliveryWrite
            LoggingConfiguration:
                DestinationBucketName: !Ref LogsBucket
                LogFilePrefix: "access_logs_proxy_bucket/"
            CorsConfiguration:
                CorsRules:
                    -
                        AllowedMethods:
                            - "GET"
                            - "PUT"
                            - "POST"
                            - "HEAD"
                        AllowedOrigins:
                            - "*"
                        AllowedHeaders:
                            - "*"
                        ExposedHeaders:
                            - "ETag"
                            - "Content-Length"
                            - "x-amz-meta-uuid"
                            - "x-amz-meta-md5"
                        MaxAge: 3000
            LifecycleConfiguration:
                Rules:
                    -
                        Id: "Use Intelligent tier"
                        Status: Enabled
                        Transitions:
                            -
                                StorageClass: INTELLIGENT_TIERING
                                TransitionInDays: 0
                        AbortIncompleteMultipartUpload:
                            DaysAfterInitiation: 7
                    -
                        Id: "Keep previous version for 7 days"
                        Status: Enabled
                        NoncurrentVersionExpirationInDays: 7
                        AbortIncompleteMultipartUpload:
                            DaysAfterInitiation: 1
            Tags:
                -
                    Key: SolutionId
                    Value: !Ref SolutionId
            VersioningConfiguration:
                Status: Enabled

    ProxyBucketPolicy:
        Condition: CreateProxyBucket
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref ProxyBucket
            PolicyDocument:
                Statement:
                    -
                        Effect: Deny
                        Principal: "*"
                        Action: "*"
                        Resource: !Sub "arn:aws:s3:::${ProxyBucket}/*"
                        Condition:
                            Bool:
                                "aws:SecureTransport": false

    #
    # Website bucket to host media2cloud web app
    #
    WebBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        UpdateReplacePolicy: Retain
        Properties:
            BucketName: !Sub "${BucketPrefix}-web"
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                    -
                      ServerSideEncryptionByDefault:
                          SSEAlgorithm: AES256
            AccessControl: LogDeliveryWrite
            LoggingConfiguration:
                DestinationBucketName: !Ref LogsBucket
                LogFilePrefix: "access_logs_web_bucket/"
            WebsiteConfiguration:
                IndexDocument: !FindInMap
                    - "S3"
                    - "Website"
                    - "MainPage"
                ErrorDocument: !FindInMap
                    - "S3"
                    - "Website"
                    - "MainPage"
            LifecycleConfiguration:
                Rules:
                    -
                        Id: "Use Intelligent tier"
                        Status: Enabled
                        Transitions:
                            -
                                StorageClass: INTELLIGENT_TIERING
                                TransitionInDays: 0
                        AbortIncompleteMultipartUpload:
                            DaysAfterInitiation: 7
                    -
                        Id: "Keep previous version for 7 days"
                        Status: Enabled
                        NoncurrentVersionExpirationInDays: 7
                        AbortIncompleteMultipartUpload:
                            DaysAfterInitiation: 1
            Tags:
                -
                    Key: SolutionId
                    Value: !Ref SolutionId
            VersioningConfiguration:
                Status: Enabled

    WebBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref WebBucket
            PolicyDocument:
                Statement:
                    -
                        Effect: Deny
                        Principal: "*"
                        Action: "*"
                        Resource: !Sub "arn:aws:s3:::${WebBucket}/*"
                        Condition:
                            Bool:
                                "aws:SecureTransport": false

Outputs:
    LogsBucket:
        Value: !Ref LogsBucket
        Description: Bucket Name (Logs)

    IngestBucket:
        Value: !If [
            CreateIngestBucket,
            !Ref IngestBucket,
            !Ref UserDefinedIngestBucket
        ]
        Description: Bucket Name (Ingest)

    ProxyBucket:
        Value: !If [
            CreateProxyBucket,
            !Ref ProxyBucket,
            !Ref UserDefinedProxyBucket
        ]
        Description: Bucket Name (Proxy)

    WebBucket:
        Value: !Ref WebBucket
        Description: Bucket Name (Web)

    UseAccelerateEndpoint:
        Value: !If [
            UseAccelerateEndpoint,
            true,
            false
        ]
        Description: Use S3 Transfer Acceleration

